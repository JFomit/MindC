{
  "Header": {
    "FormatVersion": 0,
    "CompilerVersion": 0
  },
  "FunctionSection": {
    "DeclaredFunctions": [
      {
        "Code": {
          "Label": null
        },
        "Signature": {
          "Name": "bind_unit",
          "ReturnType": "void",
          "Parameteres": [
            {
              "Type": {
                "TypeName": ""
              }
            },
            {
              "Type": {
                "TypeName": ""
              }
            }
          ]
        }
      },
      {
        "Code": {
          "Label": null
        },
        "Signature": {
          "Name": "move_unit",
          "ReturnType": "void",
          "Parameteres": [
            {
              "Type": {
                "TypeName": "number,number"
              }
            },
            {
              "Type": {
                "TypeName": ""
              }
            }
          ]
        }
      },
      {
        "Code": {
          "Label": null
        },
        "Signature": {
          "Name": "sin",
          "ReturnType": "number",
          "Parameteres": [
            {
              "Type": {
                "TypeName": "number"
              }
            },
            {
              "Type": {
                "TypeName": ""
              }
            }
          ]
        }
      },
      {
        "Code": {
          "Label": null
        },
        "Signature": {
          "Name": "cos",
          "ReturnType": "number",
          "Parameteres": [
            {
              "Type": {
                "TypeName": "number"
              }
            },
            {
              "Type": {
                "TypeName": ""
              }
            }
          ]
        }
      },
      {
        "Code": {
          "Label": null
        },
        "Signature": {
          "Name": "main",
          "ReturnType": "void",
          "Parameteres": [
            {
              "Type": {
                "TypeName": ""
              }
            },
            {
              "Type": {
                "TypeName": ""
              }
            }
          ]
        }
      }
    ]
  },
  "CodeSection": {
    "FunctionsCode": [
      {
        "Code": [
          "bind_unit:",
          "[store .return]",
          "ubind @flare",
          "[return]"
        ]
      },
      {
        "Code": [
          "move_unit:",
          "[store .return]",
          "[store y]",
          "[store x]",
          "ucontrol move x y",
          "[return]"
        ]
      },
      {
        "Code": [
          "sin:",
          "[store .return]",
          "[store x]",
          "set result 0",
          "op sin result x",
          "set .c_temp0 result",
          "[load .c_temp0]",
          "[return]",
          "[return]"
        ]
      },
      {
        "Code": [
          "cos:",
          "[store .return]",
          "[store x]",
          "set result 0",
          "op cos result x",
          "set .c_temp0 result",
          "[load .c_temp0]",
          "[return]",
          "[return]"
        ]
      },
      {
        "Code": [
          "[entrypoint]",
          "main:",
          "set iterations 0",
          "[load iterations]",
          "[call void.bind_unit()]",
          "[store iterations]",
          ".test.mindcs0:",
          "set .c_temp0 true",
          "jump .test.mindcs2 notEqual .c_temp0 true",
          ".test.mindcs1:",
          "set .c_temp0 50",
          "set .c_temp1 iterations",
          "[load iterations]",
          "[load .c_temp0]",
          "[load .c_temp1]",
          "[call number.cos(number)]",
          "[store .c_temp1]",
          "[store .c_temp0]",
          "[store iterations]",
          "op mul .c_temp0 .c_temp0 .c_temp1",
          "set .c_temp1 150",
          "op add .c_temp0 .c_temp0 .c_temp1",
          "set .c_temp1 50",
          "set .c_temp2 iterations",
          "[load iterations]",
          "[load .c_temp0]",
          "[load .c_temp1]",
          "[load .c_temp2]",
          "[call number.sin(number)]",
          "[store .c_temp2]",
          "[store .c_temp1]",
          "[store .c_temp0]",
          "[store iterations]",
          "op mul .c_temp1 .c_temp1 .c_temp2",
          "set .c_temp2 150",
          "op add .c_temp1 .c_temp1 .c_temp2",
          "[load iterations]",
          "[load .c_temp0]",
          "[load .c_temp1]",
          "[call void.move_unit(number,number)]",
          "[store iterations]",
          "set .c_temp0 iterations",
          "set .c_temp1 1",
          "op add .c_temp0 .c_temp0 .c_temp1",
          "set iterations .c_temp0",
          "jump .test.mindcs0 always",
          ".test.mindcs2:",
          "[reset]"
        ]
      }
    ]
  },
  "BEFORE_INIT": ""
}